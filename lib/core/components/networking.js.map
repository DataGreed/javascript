{"version":3,"sources":["core/components/networking.js"],"names":["config","crypto","sendBeacon","_config","_crypto","_sendBeacon","_maxSubDomain","_currentSubDomain","Math","floor","random","_providedFQDN","secure","origin","_coreParams","shiftStandardOrigin","indexOf","newSubDomain","toString","replace","failover","_standardOrigin","nextOrigin","queryParams","endpoint","callback","getStandardOrigin","_networkTransport","GET","body","POST"],"mappings":";;;;;;;;AAEA;;;;AACA;;;;;;;;;AA0BE,wBAA+D;AAAA,QAAjDA,MAAiD,QAAjDA,MAAiD;AAAA,QAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,QAAjCC,UAAiC,QAAjCA,UAAiC;;AAAA;;AAC7D,SAAKC,OAAL,GAAeH,MAAf;AACA,SAAKI,OAAL,GAAeH,MAAf;AACA,SAAKI,WAAL,GAAmBH,UAAnB;;AAEA,SAAKI,aAAL,GAAqB,EAArB;AACA,SAAKC,iBAAL,GAAyBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,KAAKJ,aAAhC,CAAzB;;AAEA,SAAKK,aAAL,GAAqB,CAAC,KAAKR,OAAL,CAAaS,MAAb,GAAsB,UAAtB,GAAmC,SAApC,IAAiD,KAAKT,OAAL,CAAaU,MAAnF;AACA,SAAKC,WAAL,GAAmB,EAAnB;;AAGA,SAAKC,mBAAL;AACD;;;;iCAEoB;AAEnB,UAAI,KAAKJ,aAAL,CAAmBK,OAAnB,CAA2B,SAA3B,MAA0C,CAAC,CAA/C,EAAkD;AAChD,eAAO,KAAKL,aAAZ;AACD;;AAED,UAAIM,qBAAJ;;AAEA,WAAKV,iBAAL,GAAyB,KAAKA,iBAAL,GAAyB,CAAlD;;AAEA,UAAI,KAAKA,iBAAL,IAA0B,KAAKD,aAAnC,EAAkD;AAChD,aAAKC,iBAAL,GAAyB,CAAzB;AACD;;AAEDU,qBAAe,KAAKV,iBAAL,CAAuBW,QAAvB,EAAf;;AAEA,aAAO,KAAKP,aAAL,CAAmBQ,OAAnB,CAA2B,QAA3B,EAAqC,OAAOF,YAA5C,CAAP;AACD;;;0CAGsD;AAAA,UAAnCG,QAAmC,uEAAf,KAAe;;AACrD,WAAKC,eAAL,GAAuB,KAAKC,UAAL,CAAgBF,QAAhB,CAAvB;;AAEA,aAAO,KAAKC,eAAZ;AACD;;;wCAE2B;AAC1B,aAAO,KAAKA,eAAZ;AACD;;;wBAEGE,W,EAAaC,Q,EAAUC,Q,EAAU;AACnCD,eAASX,MAAT,GAAkB,KAAKa,iBAAL,EAAlB;AACA,WAAKvB,OAAL,CAAawB,iBAAb,CAA+BC,GAA/B,CAAmC,EAAEL,wBAAF,EAAeC,kBAAf,EAAyBC,kBAAzB,EAAnC;AACD;;;yBAEIF,W,EAAaM,I,EAAML,Q,EAAUC,Q,EAAU;AAC1CD,eAASX,MAAT,GAAkB,KAAKa,iBAAL,EAAlB;AACA,WAAKvB,OAAL,CAAawB,iBAAb,CAA+BG,IAA/B,CAAoC,EAAEP,wBAAF,EAAeM,UAAf,EAAqBL,kBAArB,EAA+BC,kBAA/B,EAApC;AACD","file":"networking.js","sourcesContent":["\n\nimport Crypto from './cryptography/index';\nimport Config from './config';\n\ntype NetworkingModules = {\n  crypto: Crypto,\n  config: Config,\n  sendBeacon: Function\n}\n\nexport default class {\n  _sendBeacon: Function;\n\n  _config: Config;\n  _crypto: Crypto;\n\n  _maxSubDomain: number;\n  _currentSubDomain: number;\n\n  _standardOrigin: string;\n  _subscribeOrigin: string;\n\n  _providedFQDN: string;\n\n  _requestTimeout: number;\n\n  _coreParams: Object; /* items that must be passed with each request. */\n\n  constructor({ config, crypto, sendBeacon }: NetworkingModules) {\n    this._config = config;\n    this._crypto = crypto;\n    this._sendBeacon = sendBeacon;\n\n    this._maxSubDomain = 20;\n    this._currentSubDomain = Math.floor(Math.random() * this._maxSubDomain);\n\n    this._providedFQDN = (this._config.secure ? 'https://' : 'http://') + this._config.origin;\n    this._coreParams = {};\n\n    // create initial origins\n    this.shiftStandardOrigin();\n  }\n\n  nextOrigin(): string {\n    // if a custom origin is supplied, use do not bother with shuffling subdomains\n    if (this._providedFQDN.indexOf('pubsub.') === -1) {\n      return this._providedFQDN;\n    }\n\n    let newSubDomain: string;\n\n    this._currentSubDomain = this._currentSubDomain + 1;\n\n    if (this._currentSubDomain >= this._maxSubDomain) {\n      this._currentSubDomain = 1;\n    }\n\n    newSubDomain = this._currentSubDomain.toString();\n\n    return this._providedFQDN.replace('pubsub', 'ps' + newSubDomain);\n  }\n\n  // origin operations\n  shiftStandardOrigin(failover: boolean = false): string {\n    this._standardOrigin = this.nextOrigin(failover);\n\n    return this._standardOrigin;\n  }\n\n  getStandardOrigin(): string {\n    return this._standardOrigin;\n  }\n\n  GET(queryParams, endpoint, callback) {\n    endpoint.origin = this.getStandardOrigin();\n    this._config._networkTransport.GET({ queryParams, endpoint, callback });\n  }\n\n  POST(queryParams, body, endpoint, callback) {\n    endpoint.origin = this.getStandardOrigin();\n    this._config._networkTransport.POST({ queryParams, body, endpoint, callback });\n  }\n\n}\n"]}