{"version":3,"sources":["core/components/reconnection_manager.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;AASA,IAAM,sBAAsB,IAA5B;AACA,IAAM,qBAAqB,CAA3B;;;AAaE,wBAAgG;AAAA,QAAlF,YAAkF,QAAlF,YAAkF;AAAA,QAApE,cAAoE,QAApE,cAAoE;AAAA,QAApD,eAAoD,QAApD,eAAoD;AAAA,QAAnC,MAAmC,QAAnC,MAAmC;;AAAA;;AAC9F,SAAK,aAAL,GAAqB,YAArB;AACA,SAAK,OAAL,GAAe,MAAf;;AAEA,SAAK,UAAL,GAAkB,IAAlB;AACA,SAAK,YAAL,GAAoB,CAApB;;AAEA,SAAK,eAAL,GAAuB,cAAvB;AACA,SAAK,gBAAL,GAAwB,eAAxB;AACD;;;;mCAEc;AACb,WAAK,WAAL;;AAEA,UAAI,CAAC,KAAK,UAAN,IAAoB,KAAK,OAAL,CAAa,2BAArC,EAAkE;AAChE,aAAK,UAAL,GAAkB,WAAW,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAAX,EAA6C,KAAK,cAAL,EAA7C,CAAlB;AACD;AACF;;;qCAEgB;AACf,UAAI,KAAK,UAAT,EAAqB;AACnB,eAAO,mBAAP;AACD,OAFD,MAEO;AACL,eAAO,OAAO,KAAK,YAAnB;AACD;AACF;;;kCAEa;AACZ,mBAAa,KAAK,UAAlB;AACD;;;uCAEkB;AAAA;;AACjB,WAAK,aAAL,CAAmB,UAAC,MAAD,EAAgC;AACjD,YAAI,OAAO,KAAP,IAAgB,MAAK,UAAzB,EAAqC;AACnC,gBAAK,UAAL,GAAkB,KAAlB;AACA,gBAAK,gBAAL;AACD,SAHD,MAGO,IAAI,CAAC,OAAO,KAAR,IAAiB,CAAC,MAAK,UAA3B,EAAuC;AAC5C,gBAAK,UAAL,GAAkB,IAAlB;AACA,gBAAK,YAAL,GAAoB,CAApB;AACA,gBAAK,eAAL;AACD;;AAGD,YAAI,CAAC,MAAK,UAAV,EAAsB;AACpB,gBAAK,YAAL,GAAoB,MAAK,YAAL,KAAsB,kBAAtB,GAA2C,CAA3C,GAA+C,MAAK,YAAL,IAAqB,CAAxF;AACD;;AAED,cAAK,YAAL;AACD,OAhBD;AAiBD;;;+CAE0B;AACzB,WAAK,UAAL,GAAkB,IAAlB;AACA,WAAK,eAAL;AACA,WAAK,YAAL;AACD;;;gDAE2B;AAC1B,WAAK,UAAL,GAAkB,KAAlB;AACA,WAAK,gBAAL;AACA,WAAK,YAAL;AACD","file":"core/components/reconnection_manager.js","sourcesContent":["import TimeEndpoint from '../endpoints/time';\nimport Config from '../components/config';\n\nimport { StatusAnnouncement } from '../flow_interfaces';\n\ntype ReconnectionManagerArgs = {\n  timeEndpoint: TimeEndpoint,\n  onReconnection: Function,\n  onDisconnection: Function,\n  config: Config\n}\n\nconst SUCCESSFUL_INTERVAL = 6000;\nconst MAX_FAILED_BACKOFF = 5;\n\nexport default class {\n  _config: Config;\n  _timeEndpoint: TimeEndpoint;\n\n  _timeTimer: number;\n  _connected: boolean;\n  _failedTries: number;\n\n  _onReconnection: Function;\n  _onDisconnection: Function;\n\n  constructor({ timeEndpoint, onReconnection, onDisconnection, config }: ReconnectionManagerArgs) {\n    this._timeEndpoint = timeEndpoint;\n    this._config = config;\n\n    this._connected = true;\n    this._failedTries = 0;\n\n    this._onReconnection = onReconnection;\n    this._onDisconnection = onDisconnection;\n  }\n\n  startPolling() {\n    this.stopPolling();\n\n    if (!this._connected || this._config.periodicalConnectivityCheck) {\n      this._timeTimer = setTimeout(this._performTimeLoop.bind(this), this.decideInterval());\n    }\n  }\n\n  decideInterval() {\n    if (this._connected) {\n      return SUCCESSFUL_INTERVAL;\n    } else {\n      return 1000 * this._failedTries;\n    }\n  }\n\n  stopPolling() {\n    clearTimeout(this._timeTimer);\n  }\n\n  _performTimeLoop() {\n    this._timeEndpoint((status: StatusAnnouncement) => {\n      if (status.error && this._connected) {\n        this._connected = false;\n        this._onDisconnection();\n      } else if (!status.error && !this._connected) {\n        this._connected = true;\n        this._failedTries = 0;\n        this._onReconnection();\n      }\n\n      // if we are still not connected, bump up the unsuccessful count for exponential back-off.\n      if (!this._connected) {\n        this._failedTries = this._failedTries === MAX_FAILED_BACKOFF ? 1 : this._failedTries += 1;\n      }\n\n      this.startPolling();\n    });\n  }\n\n  signalNetworkReconnected() {\n    this._connected = true;\n    this._onReconnection();\n    this.startPolling();\n  }\n\n  signalNetworkDisconnected() {\n    this._connected = false;\n    this._onDisconnection();\n    this.startPolling();\n  }\n\n}\n"],"sourceRoot":"/source/"}