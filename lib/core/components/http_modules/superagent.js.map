{"version":3,"sources":["core/components/http_modules/superagent.js"],"names":["_detectErrorCategory","err","code","PNNetworkIssuesCategory","status","hasOwnProperty","timeout","PNTimeoutCategory","response","badRequest","PNBadRequestCategory","forbidden","PNAccessDeniedCategory","PNUnknownCategory","_attachSuperagentLogger","req","_pickLogger","console","log","window","start","Date","getTime","timestamp","toISOString","logger","url","qs","on","res","now","elapsed","timestampDone","text","_abstractedXDR","superagentConstruct","endpoint","callback","isDebug","use","end","resp","error","operation","statusCode","errorData","category","parsedResponse","JSON","parse","POST","queryParams","body","post","origin","query","send","GET","get"],"mappings":"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","file":"superagent.js","sourcesContent":["/* @flow */\n/* global window */\n\nimport superagent from 'superagent';\n\nimport categoryConstants from '../../constants/categories';\n\nimport { EndpointDefinition, StatusAnnouncement } from '../../flow_interfaces';\n\nconst _detectErrorCategory = (err: Object): string => {\n  if (err.code === 'ENOTFOUND') return categoryConstants.PNNetworkIssuesCategory;\n  if (err.status === 0 || (err.hasOwnProperty('status') && typeof err.status === 'undefined')) return categoryConstants.PNNetworkIssuesCategory;\n  if (err.timeout) return categoryConstants.PNTimeoutCategory;\n\n  if (err.response) {\n    if (err.response.badRequest) return categoryConstants.PNBadRequestCategory;\n    if (err.response.forbidden) return categoryConstants.PNAccessDeniedCategory;\n  }\n\n  return categoryConstants.PNUnknownCategory;\n};\n\nconst _attachSuperagentLogger = (req: Object) => {\n  let _pickLogger = () => {\n    if (console && console.log) return console; // eslint-disable-line no-console\n    if (window && window.console && window.console.log) return window.console;\n    return console;\n  };\n\n  let start = new Date().getTime();\n  let timestamp = new Date().toISOString();\n  let logger = _pickLogger();\n  logger.log('<<<<<');                                               // eslint-disable-line no-console\n  logger.log('[' + timestamp + ']', '\\n', req.url, '\\n', req.qs);    // eslint-disable-line no-console\n  logger.log('-----');                                               // eslint-disable-line no-console\n\n  req.on('response', (res) => {\n    let now = new Date().getTime();\n    let elapsed = now - start;\n    let timestampDone = new Date().toISOString();\n\n    logger.log('>>>>>>');                                                                                  // eslint-disable-line no-console\n    logger.log('[' + timestampDone + ' / ' + elapsed + ']', '\\n', req.url, '\\n', req.qs, '\\n', res.text);  // eslint-disable-line no-console\n    logger.log('-----');                                                                                   // eslint-disable-line no-console\n  });\n};\n\nconst _abstractedXDR = (superagentConstruct: superagent, endpoint: EndpointDefinition, callback: Function): Object => {\n  // attach a logger\n  if (endpoint.isDebug) {\n    superagentConstruct = superagentConstruct.use(_attachSuperagentLogger);\n  }\n\n  return superagentConstruct\n    .timeout(endpoint.timeout)\n    .end((err, resp) => {\n      let status: StatusAnnouncement = {};\n      status.error = err !== null;\n      status.operation = endpoint.operation;\n\n      if (resp && resp.status) {\n        status.statusCode = resp.status;\n      }\n\n      if (err) {\n        status.errorData = err;\n        status.category = _detectErrorCategory(err);\n        return callback(status, null);\n      }\n\n      let parsedResponse = JSON.parse(resp.text);\n      return callback(status, parsedResponse);\n    });\n};\n\nexport default {\n  POST: ({ queryParams, body, endpoint, callback }): superagent => {\n    let superagentConstruct = superagent\n      .post(endpoint.origin + endpoint.url)\n      .query(queryParams)\n      .send(body);\n    return _abstractedXDR(superagentConstruct, endpoint, callback);\n  },\n\n  GET: ({ queryParams, endpoint, callback }): superagent => {\n    let superagentConstruct = superagent\n      .get(endpoint.origin + endpoint.url)\n      .query(queryParams);\n    return _abstractedXDR(superagentConstruct, endpoint, callback);\n  }\n};\n"]}